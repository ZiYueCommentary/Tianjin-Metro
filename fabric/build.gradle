import ziyue.tjmetro.buildtools.BuildTools

plugins {
    id 'fabric-loom' version '+'
}

final BuildTools buildTools = new BuildTools(minecraft_version)

loom {
    runConfigs.configureEach { ideConfigGenerated = true }
    mixin {
        useLegacyMixinAp = true
        setDefaultRefmapName("tjmetro.refmap.json")
        setDefaultRefmapName("tjmetro-fabric.refmap.json")
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings "net.fabricmc:yarn:${buildTools.dependencies.yarn()}:v2"
    modImplementation "net.fabricmc:fabric-loader:${buildTools.dependencies.fabricLoader()}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${buildTools.dependencies.fabricApi()}"
    modApi "com.terraformersmc:modmenu:${buildTools.dependencies.modMenu()}"
    modApi("ziyue.filters:filters-fabric:${buildTools.dependencies.filtersApi()}") {
        exclude(group: "net.fabricmc")
    }
    modApi("me.shedaniel.cloth:cloth-config-fabric:${buildTools.dependencies.clothConfig()}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    configurations.configureEach {
        resolutionStrategy {
            force("net.fabricmc:fabric-loader:${buildTools.dependencies.fabricLoader()}")
        }
    }
    modImplementation "org.mtr:MTR-fabric:${mtr_version}+${minecraft_version}-server"
    annotationProcessor 'systems.manifold:manifold-preprocessor:+'
}

repositories {
    maven { url = "https://maven.terraformersmc.com/" }
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(buildTools.javaLanguageVersion))
    }
    withSourcesJar()
}
