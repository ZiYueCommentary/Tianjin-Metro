plugins {
    id "io.github.pacifistmc.forgix" version "1.+"
}

forgix {
    group = "ziyue.tjmetro"
    mergedJarName = "${project.archives_base_name}-${project.mod_version}+${project.minecraft_version}.jar"
    outputDir = "build/"

    fabric {
        projectName = "fabric"
        jarLocation = "build/libs/${project.archives_base_name}-fabric-${project.mod_version}+${project.minecraft_version}.jar"
    }

    forge {
        projectName = "forge"
        jarLocation = "build/libs/${project.archives_base_name}-forge-${project.mod_version}+${project.minecraft_version}.jar"
    }
}

subprojects {
    apply plugin: "java"

    group project.maven_group
    version "${rootProject.properties.mod_version}+${rootProject.properties.minecraft_version}"

    base {
        archivesName = "${rootProject.archives_base_name}-${project.properties.loader_name}"
    }

    dependencies {
        implementation 'com.google.code.findbugs:jsr305:+'
    }

    repositories {
        flatDir { dirs "../libs" }
        maven { url "https://jitpack.io" }
        maven { url "https://maven.ziyuesinicization.site/releases/" }
        maven { url "https://maven.shedaniel.me/" }
    }

    def mc_ver = rootProject.properties.minecraft_version
    def mc_major = mc_ver.split("\\.")[0]
    def mc_main = mc_ver.split("\\.")[1]
    def mc_minor = mc_ver.split("\\.").size() > 2 ? (mc_ver.split("\\.")[2] as String).padLeft(2, '0') : 0
    def merged_mc_version = "$mc_major$mc_main$mc_minor"

    ext { // Expose to subproject
        java_version = 17

        full_mod_version = version
    }

    /* Manifold support */
    tasks.withType(JavaCompile).forEach {
        it.options.compilerArgs += ["-Xplugin:Manifold",
                                    "-AMC_VERSION=$merged_mc_version",
                                    "-ALOADER=$project.properties.loader_name"]
    }

    // Some system don't compile with UTF-8 by default
    compileJava {
        options.encoding = 'UTF-8'
    }

    // Replace placeholder resources
    processResources {
        inputs.property "version", mod_version
        inputs.property "minecraft_version", minecraft_version

        filesMatching('META-INF/mods.toml') {
            expand(
                    "minecraft_version": minecraft_version,
                    "version": mod_version
            )
        }

        filesMatching("fabric.mod.json") {
            expand(
                    "version": mod_version,
                    "minecraft_version": minecraft_version
            )
        }
    }

    build.finalizedBy(mergeJars)
    assemble.finalizedBy(mergeJars)
}